from typing import Any, TYPE_CHECKING

if TYPE_CHECKING:
    Import: Any = None
    env: Any = {}

from os.path import join, isfile, exists, dirname, basename
from os import rename, remove, makedirs

import gzip
import glob

Import("env") # type: ignore


# gzip web files
def prepare_www_files():
    HEADER_FILE = join(env.get('PROJECT_DIR'), 'include', 'webFiles.h')
    filetypes_to_gzip = ['html', 'css', 'js']
    data_src_dir = join(env.get('PROJECT_DIR'), 'webUi')

    if not exists(data_src_dir):
        print(f'Error: Source directory "{data_src_dir}" does not exist!')
        return

    files_to_gzip = []
    for extension in filetypes_to_gzip:
        files_to_gzip.extend(glob.glob(join(data_src_dir, '*.' + extension)))

    print(f'[GZIP & EMBED INTO HEADER] - Processing {len(files_to_gzip)} files.')

    makedirs(dirname(HEADER_FILE), exist_ok=True)

    with open(HEADER_FILE, 'w') as header:
        header.write('#ifndef WEB_FILES_H\n#define WEB_FILES_H\n\n#include <Arduino.h>\n\n')
        header.write('// THIS FILE IS AUTOGENERATED DO NOT MODIFY IT. MODIFY FILES IN /webUi\n\n')

        for file in files_to_gzip:
            gz_file = file + '.gz'
            with open(file, 'rb') as src, gzip.open(gz_file, 'wb',9) as dst:
                dst.writelines(src)

            with open(gz_file, 'rb') as gz:
                compressed_data = gz.read()
                var_name = basename(file).replace('.', '_')

                header.write(f'const uint8_t {var_name}[] PROGMEM = {{\n')

                # Write hex values, inserting a newline every 15 bytes
                for i in range(0, len(compressed_data), 15):
                    hex_chunk = ', '.join(f'0x{byte:02X}' for byte in compressed_data[i:i+15])
                    header.write(f'  {hex_chunk},\n')

                header.write('};\n\n')
                header.write(f'#define {var_name}_size {len(compressed_data)}\n\n')

            remove(gz_file)  # Clean up temporary gzip file

        header.write('#endif // WEB_FILES_H\n')

    print(f'[DONE] Gzipped files embedded into {HEADER_FILE}')

prepare_www_files()